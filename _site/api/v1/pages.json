{"entries":[{"skip_index":true,"title":"404","url":"https://cityofaustin.github.io/atxopendata.rocks//404/","tags":[],"body":"Try checking out ATX Open Data Rocks! homepage or blog. Or, contact us if you can’t find what you’re looking for."},{"skip_index":true,"title":"500","url":"https://cityofaustin.github.io/atxopendata.rocks//500/","tags":[],"body":"Try checking out 18F’s homepage or blog. Or, contact us if you can’t find what you’re looking for."},{"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//author/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/day in the life/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/demo day/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//feed/index.html","tags":[],"body":""},{"title":"Home","url":"https://cityofaustin.github.io/atxopendata.rocks//","tags":[],"body":"Welcome to The Austin Open Data Portal Support!!! Search small Search Publishing on Open Data Open Data Liaisons & Publishers everything you need to know...... Read more about Open Data Liaisons & Publishers Arrow right Arrow pointing to the right Folder with clock Representative of design systems Using Open Data Getting Started everything you need to know...... Read more about Getting Started Arrow right Arrow pointing to the right Monitor icon Improve public facing interfaces Read more about Arrow right Arrow pointing to the right Resources everything you need to know...... Read more about Resources Arrow right Arrow pointing to the right The City of Austin Open Data Sprints things we are working on..... Read more about The City of Austin Open Data Sprints Arrow right Arrow pointing to the right Let’s work together to improve the user experience of government. Read more about Arrow right Arrow pointing to the right Recent blog posts"},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/how we work/","tags":[],"body":""},{"skip_index":true,"title":"Blog","url":"https://cityofaustin.github.io/atxopendata.rocks//blog/","tags":[],"body":"Blog No posts yet. Page of"},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/open data/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/open government/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/our projects/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/peace corps/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/presidential innovation fellows/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/speaker series/","tags":[],"body":""},{"title":"Stages (draft)","url":"https://cityofaustin.github.io/atxopendata.rocks//dashboard/stages/","tags":[],"body":"These are the agile development and human-centered design stages that we use at 18F to build products and services. We are still drafting our definitions and guidelines, so if you want to learn more, we recommend GOV.UK's excellent work in this area. discovery Who are your users and what are their true needs? In this phase, you will start to answer those questions so that you can plan to build a useful product. Conducting primary research (interviewing and observing the actual users) is ideal. In addition to the users’ needs, you will explore other stakeholders’ needs, such as specific client or policy requirements. Learn more about our inspiration for the discovery stage. alpha Build one or more prototypes based on the research from the Discovery phase. Test the prototypes with small groups of actual users. Work closely with designers and developers to implement changes based on user feedback. Frequently release iterations to a small group of testers. Discover technical and design needs during this process (e.g., choose and test initial tech stack). Learn more about our inspiration for the alpha stage. beta Stage and test working software on the public web for use by a subset of the target audience. Implement changes based on user behavior and feedback. Resolve policy compliance or technical integration issues. Define and then validate statistically significant metrics for improvement. May include a time-boxed Authority to Operate. Learn more about our inspiration for the beta stage. live Open the site to all users. Necessary security, performance, and policy requirements have been met, including a continuous and final Authority to Operate (ATO). Continue to iteratively improve the service based on analytics and user feedback. Learn more about our inspiration for the live stage."},{"title":"Tags","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/","tags":[],"body":"Click through to read our posts about the following topics:"},{"title":"Thank you for subscribing to the 18F newsletter!","url":"https://cityofaustin.github.io/atxopendata.rocks//thank-you/","tags":[],"body":"We send the newsletter out every other Thursday with updates about our work, new job postings, and other news about government digital services. For more frequent updates, follow us on Twitter at @18F. Learn more about 18F’s past work. If you have any feedback, feel free to contact us at 18f@gsa.gov."},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/usability testing/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/user research/","tags":[],"body":""},{"skip_index":true,"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//tags/user-centered design/","tags":[],"body":""},{"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//team/kaitlin/","tags":[],"body":""},{"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//hire/","tags":[],"body":""},{"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//team/","tags":[],"body":""},{"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//dashboard/","tags":[],"body":""},{"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//assets/blog/README.md","tags":[],"body":"## No images here Don't put images or other assets directly in this directory! Always make a new directory per-post, like those above, to store assets. The directory doesn't have to use the same slug as your post. Just pick something that doesn't exist yet, and use it. Thank you for doing your part in keeping a Clean Blog For All."},{"title":"About The City of Austin Open Data Initiative","url":"https://cityofaustin.github.io/atxopendata.rocks//about/","tags":[],"body":"The City of Austin is using open data to increase transparency, efficiency, and opportunities for collaboration. We encourage the use of public data that the City of Austin has published to spark innovation, promote public collaboration, increase government transparency, and inform decision making. “The City of Austin is committed to an open and transparent government. I believe this is an integral part of maintaining a vital and robust democracy.” – Marc Ott, Austin City Manager, April 2015 History In December 2011, Austin’s City Council voted to officially support the adoption of an open government framework. In 2013, the City Manager delivered a four-point plan for making City operations more open. This plan, known as the Open Government Directive, identifies multiple performance expectations related to open data. Key documents Open Government Resolution by City Council - December 8, 2011 City of Austin Open Government Directive - August 26, 2013 Meet the Team we are a team of ………..whose mission is to help City of Austin departments and staff to perform the open data responsibilities outlined in the Open Government Directive. Charles Purma III - redrict to blog posts Anne Whitlocke - redrict to blog posts Brad McCarty - redrict to blog posts Wei San Hui - redrict to blog posts Marbenn Cayetano - redrict to blog posts Sara Smith - redrict to blog posts Happiness Kisoso - redrict to blog posts Events Open Data Sprints At Austin’s Open Data Initiative, we work on projects for 1-3 months at a time. These project periods are called sprints. Click here to learn more ( redirect to to the Open Data Sprint page)"},{"title":"Kaitlin","url":"https://cityofaustin.github.io/atxopendata.rocks//author/kaitlin/","tags":[],"body":""},{"title":"Frequently Asked Questions","url":"https://cityofaustin.github.io/atxopendata.rocks//faq/","tags":["agile bpa"],"body":"The federal government spends over $80 billion dollars per year on information technology. Many technology contracts rely on development and contract management methods that often produce products that are over budget, late, or don’t meet the needs of their customers. Even if an agency wanted to find a vendor that uses modern software development methods, historically it’s been difficult to know the difference between who claims to and who actually does. Approach Creating a pool of pre-vetted vendors who use agile development methods 18F and the GSA’s Federal Acquisition Service created a contracting vehicle called the Agile Delivery Services Blanket Purchase Agreement (Agile BPA). The Agile BPA helps federal agencies find vendors who are capable and interested in working in an agile way, and then helps make those projects successful. We selected 17 vendors that specialize in user-centered design, agile software development, and DevOps to be part of the Agile BPA pool. Here’s what the process looks like for procurement officers who want to use the Agile BPA. The 18F team works closely with each agency to: Conduct scoping workshops with the project’s product owner, team, and stakeholders to understand what the vendor needs to build Write an agile-friendly statement of objectives Facilitate the procurement process Manage the vendor relationship post-award through delivery We’ve already seen projects that use the Agile BPA include more users in the development process and deliver results faster than traditional contracting methods. We’ve even seen interest in this model from other levels of government agencies. The states of California and Mississippi have developed their own vendor pools based on our Agile BPA."},{"title":"Contact","url":"https://cityofaustin.github.io/atxopendata.rocks//contact/","tags":[],"body":"Let’s work together to improve the user experience of government. Use the button below to email us about the problem you’d like to solve, and we’ll set up a time to talk and answer your questions. As fellow federal employees, we want to make sure you find the team that’s best suited to your situation, even if it isn’t 18F. After our initial conversations, we’ll recommend a path to success, whether it’s with 18F, another office in GSA, or a private vendor. Either way, 18F has short, low-cost options to help prepare your team to find the right solution. To learn more about how we work with agencies, read up on our past projects, explore our Partnership Principles, or learn about how we’re funded."},{"title":"Austin Open Data Glossary","url":"https://cityofaustin.github.io/atxopendata.rocks//glossary/","tags":["glossary open data"],"body":"The federal government spends over $80 billion dollars per year on information technology. Many technology contracts rely on development and contract management methods that often produce products that are over budget, late, or don’t meet the needs of their customers. Even if an agency wanted to find a vendor that uses modern software development methods, historically it’s been difficult to know the difference between who claims to and who actually does. Approach Creating a pool of pre-vetted vendors who use agile development methods 18F and the GSA’s Federal Acquisition Service created a contracting vehicle called the Agile Delivery Services Blanket Purchase Agreement (Agile BPA). The Agile BPA helps federal agencies find vendors who are capable and interested in working in an agile way, and then helps make those projects successful. We selected 17 vendors that specialize in user-centered design, agile software development, and DevOps to be part of the Agile BPA pool. Here’s what the process looks like for procurement officers who want to use the Agile BPA. The 18F team works closely with each agency to: Conduct scoping workshops with the project’s product owner, team, and stakeholders to understand what the vendor needs to build Write an agile-friendly statement of objectives Facilitate the procurement process Manage the vendor relationship post-award through delivery We’ve already seen projects that use the Agile BPA include more users in the development process and deliver results faster than traditional contracting methods. We’ve even seen interest in this model from other levels of government agencies. The states of California and Mississippi have developed their own vendor pools based on our Agile BPA."},{"title":"Open Data Liaisons & Publishers","url":"https://cityofaustin.github.io/atxopendata.rocks//liaisons/","tags":[],"body":"Open Data Liaisons implement their department’s Open Data plans in relation to the City of Austin’s Open Data Initiative (ODI) and City Manager’s “open by default” directive. The Liaison may be an owner, implementer or coordinator of departmental data and data-related resources. The liaison will be the single point of contact between the department and the Corporate Open Data team. Description Key tasks and areas of responsibility Coordinate and manage departmental Open Data efforts in relation to the City of Austin’s ODI. Identify new data sets to be published on the COA Open Data Portal. Facilitate proper assessment, review and approvals for data to be published and ensure it complies with legal, ethical and security concerns. Manage published data sets on the Open Data Portal ensuring data quality, standards and usability. Identify various uses of department Open Data that promote transparency, innovation, advanced analytics and performance measurement. Participate in City of Austin Open Data outreach, workshops, hackathons, projects and partnerships."},{"title":"Resources","url":"https://cityofaustin.github.io/atxopendata.rocks//resources/","tags":[],"body":"Resources insert info here!!! insert info here Folder with clock Representative of design systems Frequently Asked Questions everything you need to know...... Read more about Frequently Asked Questions Arrow right Arrow pointing to the right Folder with clock Representative of design systems The City of Austin Open Data Glossary everything you need to know...... Read more about The City of Austin Open Data Glossary Arrow right Arrow pointing to the right Monitor icon Improve public facing interfaces Support Across the government, developers frequently have to tackle the same design problems when creating a new website. What should the buttons look like? How should the navigation work? Each time a federal developer comes to a different solution, it creates a more fractured experience for public users of government services. Read more about Support Arrow right Arrow pointing to the right Monitor icon Improve public facing interfaces Read more about Arrow right Arrow pointing to the right video-guides We worked with Treasury to implement the Digital Accountability and Transparency Act. Read more about video-guides Arrow right Arrow pointing to the right"},{"title":"Open Data Sprints","url":"https://cityofaustin.github.io/atxopendata.rocks//sprints/","tags":["new ten"],"body":"Occasionally, our country’s currency needs technical and aesthetic updates. The Department of Treasury recently undertook a project to redesign the $10 bill to upgrade security and feature a historic American woman. Although Treasury had determined most of the project’s logistics, they needed help creating a digital strategy to ensure a successful rollout of the new currency. Treasury worked with 18F to ensure that the introduction of the New Ten would have the desired impact — namely, that #TheNewTen website would help users find the information they needed and include a clear call to action to encourage people to share their thoughts on the New Ten. Approach Crafting a comprehensive digital strategy Our team started by learning more about the project’s context and users. Using this knowledge, they crafted a digital strategy to maximize the impact of the New Ten. The 18F project team worked closely with the design team at Treasury to create friendly, accessible visual designs and content that helped site visitors quickly get the information they needed. The site invited visitors to share their thoughts on the New Ten, helping Treasury gather the public feedback they sought to inform their design decisions. The 18F team also consulted on information architecture work, search engine optimization, and a larger rollout strategy, including a comprehensive social media plan to build awareness of the proposed changes. Treasury was able to meet users where they were, allowing people to quickly learn about the New Ten and share their thoughts about the project. The public and stakeholders alike have been pleased with the project’s outcomes; one stakeholder told the team, “thank you for all your support with this effort and the terrific results! … I knew the team was in good hands with your guidance and expertise.”"},{"title":"Getting Started on Open Data","url":"https://cityofaustin.github.io/atxopendata.rocks//start/","tags":["glossary open data"],"body":"The federal government spends over $80 billion dollars per year on information technology. Many technology contracts rely on development and contract management methods that often produce products that are over budget, late, or don’t meet the needs of their customers. Even if an agency wanted to find a vendor that uses modern software development methods, historically it’s been difficult to know the difference between who claims to and who actually does. Approach Creating a pool of pre-vetted vendors who use agile development methods 18F and the GSA’s Federal Acquisition Service created a contracting vehicle called the Agile Delivery Services Blanket Purchase Agreement (Agile BPA). The Agile BPA helps federal agencies find vendors who are capable and interested in working in an agile way, and then helps make those projects successful. We selected 17 vendors that specialize in user-centered design, agile software development, and DevOps to be part of the Agile BPA pool. Here’s what the process looks like for procurement officers who want to use the Agile BPA. The 18F team works closely with each agency to: Conduct scoping workshops with the project’s product owner, team, and stakeholders to understand what the vendor needs to build Write an agile-friendly statement of objectives Facilitate the procurement process Manage the vendor relationship post-award through delivery We’ve already seen projects that use the Agile BPA include more users in the development process and deliver results faster than traditional contracting methods. We’ve even seen interest in this model from other levels of government agencies. The states of California and Mississippi have developed their own vendor pools based on our Agile BPA."},{"title":"Support","url":"https://cityofaustin.github.io/atxopendata.rocks//support/","tags":["web design standards"],"body":"Across the government, developers frequently have to tackle the same design problems when creating a new website. What should the buttons look like? How should the navigation work? Each time a federal developer comes to a different solution, it creates a more fractured experience for public users of government services. Creating a more consistent feel across government websites can help build trust with users, help people clearly identify official websites, and make services easier to use — and saves the government time and money. Approach Create better experiences for the American public The U.S. Web Design Standards are a library of design components that can help government developers quickly make trustworthy, accessible, and consistent digital government services. Originally developed as a collaboration between the U.S. Digital Service and 18F, the Standards are now a stable set of code and guidelines designed for the needs of government. Though the Standards are not required to be used for federal government websites, they can help speed up the launch of a new site or bring a modern, consistent look to existing websites and services. The Standards are accessible, responsive, and designed for flexibility and optimized for web performance right out of the box. You can just add one of the components to update part of your site or the whole package for a complete redesign. The Standards address a number of common design elements, including: Buttons Tables Navigation Typography Forms Color The Standards are open source and free to use, but the 18F team is also available to help train federal agency teams on how to implement the Standards or build custom design elements to meet an agency’s specific needs."},{"title":"Video Guides","url":"https://cityofaustin.github.io/atxopendata.rocks//video-guides/","tags":["data act"],"body":"The U.S. federal government spends $3.8 trillion every year, which is managed by the U.S. Department of the Treasury. For most people, it’s difficult to know exactly where that money goes. The Digital Accountability and Transparency Act (DATA Act), which became law in 2014, requires that federal agencies adopt a common data standard so that agencies and the public can better understand how federal money is being spent. Treasury and the Office of Management and Budget are leading the implementation of the DATA Act, but they needed help developing the specifics of the new data standard and its technical implementation. Approach Stay flexible to stay ahead of schedule 18F helped build a prototype for the technical implementation of the law to get user feedback before all of the data standards had been finalized. Our iterative approach allowed Treasury to reduce risk, use actual data to make decisions, and speed up implementation of a very complex law. After the initial prototype, Treasury was able to hire a vendor to build the new USAspending.gov, which will give the public powerful tools to examine federal spending. 18F has worked with Treasury and the private vendor to design the site and talk to users to make sure we’re building the best solution possible. DATA Act implementation is one of the largest government-wide agile projects ever undertaken. As the multi-agency implementation team works to efficiently ingest information from across the government, 18F has been able to provide the development expertise, procurement strategy, and product management to ensure a successful project."},{"title":"18F UI style guide","url":"https://cityofaustin.github.io/atxopendata.rocks//styleguide/","tags":[],"body":"This is the user interface (UI) style guide for 18f.gsa.gov. The site uses a custom set of styles that inherit from the U.S. Web Design Standards and 18F brand guidelines to create style that is professional, unique, and informative. The guide has a two-fold purpose: Speed up onboarding of future maintainers of the site. While most of this guide addresses content needs, there is some technical documentation for how we have extended Jekyll’s out-of-the-box functionality. Serve as a living reference for 18F brand of styles. Adding a blog post? If you are updating or adding a new blog post, go to Layouts to get started, or go directly to Blog components to learn more about enriching your blog post. Adding a project page? If you are updating or adding a new project page, go to Layouts to get started. Overriding the Standards While 18f.gsa.gov relies heavily on the U.S. Web Design standards, there are several instances where we have overridden styles with our own set of custom stylesheets. This is primarily to align ourselves more directly with the 18F brand set of fonts, colors, and logos. Additional overrides were made to create custom layouts or components to address user needs that are specific to the marketing of the 18F brand. Explore style guide"},{"title":"18F UI style guide","url":"https://cityofaustin.github.io/atxopendata.rocks//styleguide/blog-components/","tags":["web design standards","design","open source"],"body":"Post previews Post previews are seen on the home page of 18f.gsa.gov and at the bottom of every blog post for example, this post. This feature provides the user a preview of a blog that includes the publish date, title, an excpert, a link to the full post, and tags. January 6, 2017 Dummy title This is an example of a post with plenty of example text to give it length Read more about Dummy title Arrow right Arrow pointing to the right January 7, 2017 Dummy title 2 This is an example of a post with plenty of example text to give it length Read more about Dummy title 2 Arrow right Arrow pointing to the right January 8, 2017 Dummy title 3 This is an example of a post with plenty of example text to give it length Read more about Dummy title 3 Arrow right Arrow pointing to the right Code {% include post.html date='January 6, 2017' title='Dummy title' excerpt='This is an example of a post with plenty of example text to give it length' url=dead_end_link %} {% include post.html date='January 7, 2017' title='Dummy title 2' excerpt='This is an example of a post with plenty of example text to give it length' url=dead_end_link %} {% include post.html date='January 8, 2017' title='Dummy title 3' excerpt='This is an example of a post with plenty of example text to give it length' url=dead_end_link %} Documentation Post previews are generated dynamically throughout the site. Each preview requires a few attributes: date title excerpt url Blog tags web design standards design open source Code {% for tag in page.tags %} {{ tag }} {% endfor %} Documentation Blog tags are generated and draw from a post’s tags property. Before you use a tag, make sure that it is in the list of acceptable tags. Blockquotes Blockquote as markdown: I’m thankful for a safe workplace that encourages me to raise a hand for help…or a high five. — Micah Taylor Our markdown blockquotes support line breaks: We recently welcomed the newest group of Presidential Innovation Fellows into the federal government. This diverse group represents some of the nation’s most talented and creative civic-minded innovators. More than a thousand candidates applied to serve the country in this unique capacity. From this pool of amazing and incredibly motivated applicants, we selected almost 30 designers, developers, entrepreneurs and executives to bring their unique skills into government. Blockquote as HTML: I’m thankful for how much I learn every week at 18F — from colleagues, agency partners, and the work itself. — Corey Mahoney Pull quotes with and without a team image: Code #### Blockquote as markdown: > I'm thankful for a safe workplace that encourages me to raise a hand for help...or a high five. — **Micah Taylor** #### Our markdown blockquotes support line breaks: > We recently welcomed the newest group of Presidential Innovation > Fellows into the federal government. This diverse group represents > some of the nation’s most talented and creative civic-minded > innovators. > > More than a thousand candidates applied to serve the country in this > unique capacity. From this pool of amazing and incredibly motivated > applicants, we selected almost 30 designers, developers, entrepreneurs > and executives to bring their unique skills into government. #### Blockquote as HTML: I’m thankful for how much I learn every week at 18F — from colleagues, agency partners, and the work itself. — Corey Mahoney #### Pull quotes with and without a team image: Documentation Our blockquotes use the kramdown renderer, so please defer to the documentation for details on markdown rendering issues. 18f.gsa.gov does, however, set styles that are unique to 18F Brand for both blockquotes and pull quotes. Additional resources: SCSS references Embeds There are plenty of instances where we want to be able to embed content from other web pages. Where there are several ways to do this successfully, we recommend using a Jekyll filter, oembed, to handle embeddable content in a consistent way. Code Documentation We are using a Jekyll plugin called jekyll_oembed. The URL string should be address of the content, not a URL provided to embed content. If content is private, it might be necessary to directly add HTML in this way as the service will reject any requests byjekyll_oembed. Additional resources: Additional documentation Images There are a few ways we render images on the blog: Hero images that span the entire page, within blog post, and team photos. For information on adding images to the site see: Hero images Images in blog posts individual team photos Hero images Hero images are used in the primary and blog post layouts.Here is a view of a live example. The 18F team gathered in the GSA building in May 2016. Code {% include feature-image.html %} Documentation If using a layout that needs a feature image, specify the path to the image url with the image attribute. When the image is loaded on to the page, it will be given the CSS class .post-feature_image. This will ensure that the image spans the entire width of its surrounding element. To add a caption, specify the image_figcaption attribute in the page front matter. Additional resources: SCSS references Images within blog posts Images can be any visual that supports the content of the post. We often use screen shots of platforms, people active in an design thinking excercise or images of people and our team. Below is an example of an image with a caption. This long hallway has public art from local artists hanging in it. This is part of the GSA's Fine Arts Program. Photo courtesy: GSA PBS Region 8 Code This long hallway has public art from local artists hanging in it. This is part of the GSA's Fine Arts Program. Photo courtesy: GSA PBS Region 8 Documentation To add basic images to a blog post: Use tag for all blog images. To learn more about this tag go to the developer page on mozilla Use tags for image captions. This is a preferred practice but is optional. Use the alt tag to provide screen readable captions for images that do not have a caption. If images have a caption, they do not need alt text. To make sure that browsers know this, specify alt=\"\" Make sure to prepend image path with https://cityofaustin.github.io/atxopendata.rocks/ to ensure that the file path is pointed to the correct spot. Add the class=image-shadowed CSS class to give images with white backgrounds addition depth. This blog post is a live example. If images are are small, use the class=\"align-left\" example: . This blog post is a live example. Additional resources: SCSS references Adding a team photo Any 18F team member listed in the /assets/img/team/ directory can be referenced directly in markdown or HTML. Referencing a team member who has a photo Referencing a team member who does not have a photo Code #### Referencing a team member who has a photo {{ 'brian' | team_photo }} #### Referencing a team member who does not have a photo {{ 'greg' | team_photo }} Documentation The team photo is created by using a custom Jekyll filter called team_photo that allows us to access images programmaticaly without using an img tag explicitly. If an image isn’t working, make sure that the text use for the filter directly matches the image title for the team member in question. In the above example {{ 'brian' | team_photo }}, references /assets/img/team/brian.jpg and places it in an img tag. See the code to better understand what is going on. Additional resources: Additional documentation"},{"title":"18F UI style guide","url":"https://cityofaustin.github.io/atxopendata.rocks//styleguide/colors/","tags":[],"body":"Palette $color-black | #000000 $color-dark | #1c304a $color-medium | #046b99 $color-bright | #00cfff $color-medium-hover | #034c6d $color-bright-hover | #00a7ce $color-light | #b3efff $color-gray | #5b616b $color-gray-lightest | #f1f1f1 $color-inverse | #ffffff Documentation We are primarily using 18F Brand colors. Site-specific colors, $color-medium-hover and $color-bright-hover were created as web-specific extensions of the 18F Brand. U.S. Web Design standards colors, $color-gray and $color-gray-lightest, were pulled for utility use. Additional resources: USWDS references SCSS references Backgrounds $color-dark Hero, Header Highlight: $color-bright Text: $color-inverse $color-medium Navigation, Fields, Page Text: $color-inverse $color-gray-lightest Banner & Footer Text: $color-black $color-inverse Navigation, Fields, Page Text: $color-black Code $color-dark Hero, Header Highlight: $color-bright Text: $color-inverse $color-medium Navigation, Fields, Page Text: $color-inverse $color-gray-lightest Banner & Footer Text: $color-black $color-inverse Navigation, Fields, Page Text: $color-black Documentation We are using the 18F Brand color palette for our background colors. Instead of overriding the SCSS classes and variables used by the U.S. Web Design Standards, we have created a parallel set of background color classes and variables. CSS class SCSS variable background-dark $color-dark background-medium $color-medium background-gray $color-gray background-white $color-inverse Additional resources: SCSS references"},{"title":"18F UI style guide","url":"https://cityofaustin.github.io/atxopendata.rocks//styleguide/components/","tags":[],"body":"Buttons Style on white Normal Hover Active Focus Disabled Style on dark Normal Hover Active Focus Disabled Using anchor tags instead of buttons Normal Code #### Style on white Normal Hover Active Focus Disabled #### Style on dark Normal Hover Active Focus Disabled #### Using anchor tags instead of buttons Normal Documentation Our button styles closely resemble those defined by the U.S. Web Design Standards. We have overriden them in places to more closely align the look and feel with the 18F Brand. Additional resources: USWDS references SCSS references Breadcrumbs The site breadcrumb can be used to establish a sense of place within the site. It is only included in the primary layout by default, but can be added to any layout or custom page as needed. Specifying all attributes Home Arrow right Arrow pointing to the right 18F UI style guide Arrow right Arrow pointing to the right Buttons Specifying only needed attributes parent_permalink is set as a page attribute in this example, so it doesn’t need to be directly included. Home Arrow right Arrow pointing to the right 18F UI style guide Arrow right Arrow pointing to the right Buttons Code #### Specifying all attributes {% include breadcrumb.html parent_permalink=page.parent_permalink parent_title=page.title page_title='Buttons' background_class='background-gray' %} #### Specifying only needed attributes `parent_permalink` is set as a page attribute in this example, so it doesn't need to be directly included. {% include breadcrumb.html parent_title=page.title page_title='Buttons' background_class='background-gray' %} Documentation The breadcrumb include requires a few attributes to make it appear properly. They can be directly included in the include as variables or text, or left empty if those attributes are defined on the page itself. parent_title: Title of the parent page as it should appear on the breadcrumb link parent_permalink: This is the link that the parent page goes to page_title: Title of the page as it should appear on the breadcrumb background_class: The CSS class of the breadcrumb background color. It defaults to no background color If the breadcrumb is being used as part of the primary layout, make sure to set breadcrumb: true in the page front matter. The breadcrumb is included automatically on project-tag-results layout. For more on includes, check out the Jekyll documentation. Additional resources: Include reference Project cards The card component is used as a preview for project pages, but could be adapted to meet additional needs if necessary. The design is unique to 18f.gsa.gov, but leans heavily on the stylistic foundation of the U.S. Web Design Standards and 18F Brand guidelines. Monitor icon Improve public facing interfaces Read more about Arrow right Arrow pointing to the right Monitor icon Improve public facing interfaces Read more about Arrow right Arrow pointing to the right Monitor icon Improve public facing interfaces Read more about Arrow right Arrow pointing to the right Code {% include card-project.html project='fec-gov' %} {% include card-project.html project='hhs-states' %} {% include card-project.html project='doi-every-kid-in-a-park' %} Documentation To use cards, reference the file path slug in the _projects directory. Use another project as a template to fill in all of the necessary fields. Each project card has a number of properties. The only required properties are: image_src: the project image field, and is the image portion of the card image_alt: the project image_accessibility field. Will be used to set the alt attribute on the provided image agency: the project agency field. This will be the uppercase text tagline: the project subtitle field and what appears to be the title of the card description the project excerpt and what appears as the body of the card link: the project permalink. This is where clicking on the card will take you columns: How many columns the cards should occupy. The only valid options are 2 and 3. If nothing is specified, the cards will default to 3 columns Sticky subnavigation The sticky subnavigation is a pattern that is used frequently throughout the site to make larger bodies of content easier to navigate. The About page is good example of the sticky subnavigation in the live site. What is it? A secondary navigation field that exists on the left side of a page, adjacent to a corresponding field of content. It is “sticky”, which means that its position isn’t absolute or static, but is both, depending on the user’s location on the page. It provides a sense of location by updating the active section of content that the user is viewing. 18F UI style guide 18F UI style guide Heading one Heading two Heading one Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Heading two Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Code {% include navigation.html subnav=true %} Heading one Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Heading two Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Documentation How to use Add the classes sticky and sticky-subnav to the element that you want to be sticky. Make sure that sticky.js is included in the page. If you are working on the 18F site, it is included on every page by default. Make sure that the element that is receiving position: sticky is a child of an element with a greater height. If it is not, it will never appear to be stuck. Use of the standards There are a few classes that we are using for the sticky subnavigation on the 18F site: The usa-sidenav-list class, in conjunction with the usa-current class. This is mostly taken wholesale from the standards, but does contain slight overrides to better fit with the 18F Brand. The usa-accordion class and accompanying accordion styles. We have added to this set of styles with a nav-accordion class that more accurately reflects the look and feel of the site. The usa-width-one-third grid class to define the width of our navigaton field. This isn’t necessary, but is a convention throughout the site. What to add where To add items to the subnavigation define the subnavigation items directly within page frontmatter, as a set of nav_items: subnav_items: - text: Heading one permalink: /styleguide/sticky-subnavigation/#heading-one - text: Heading two permalink: /styleguide/sticky-subnavigation/#heading-two"},{"title":"18F UI style guide","url":"https://cityofaustin.github.io/atxopendata.rocks//styleguide/for-developers/","tags":[],"body":"18f.gsa.gov, and many 18F websites deployed to Federalist use Jekyll to build static, maintainable websites. One of the core features of Jekyll is the Liquid templating language, which has a series of filters and tags that allow developers programmatically generate content. Jekyll and Liquid do quite a bit, but sometimes they aren’t enough for a project’s specific needs. When the built-in functionality that Jekyll provides isn’t enough, it is possible to build or borrow plugins to extend Jekyll. Plugin gems 18f.gsa.gov is using several Ruby gems plugins: Plugin gem Description jekyll-archives creates and manages blog-related pages. jekyll-feed generates an Atom (RSS-like) feed at /feed.xml. jekyll-paginate allows for pagination of blog pages, or pages with long lists of items. jekyll-redirect-from enables redirecting from pages that are no longer active. jekyll-seo-tag adds metadata tags for search engines and social networks. jekyll-sitemap generates a sitemap at /sitemap.xml. This makes it easier for search engines to find us. jekyll_frontmatter_tests tests to see if the correct front matter (meta data) is present on pages throughout our website. jekyll_pages_api generates a JSON file at /api/v1/pages.json that serves as the base for a site search engine. jekyll_pages_api_search search engine that uses jekyll_pages_api jekyll_oembed creates a Liquid tag that uses OEmbed Custom plugins 18f.gsa.gov uses many custom plugins for more specific site needs: Custom plugin name Description author.rb creates two filters, lookup and team_link. author_data.rb Creates an API for using data pertaining to authors throughout the site. update_author_data.rb Uses the AuthorData API to update the list of published authors. This will happen automatically every time the site builds. embed.rb legacy filter for embedding content within the site. The current approach is to use an OEmbed plugin. liquify.rb liquid parser. markdown.rb markdown parser. matching_posts.rb creates a match_posts filter that creates a list of posts belonging to a specific author. team.rb creates a team_photo filter that matches an author to their provided team photo. More documentation. utility.rb A list of Liquid filters that can be used for a variety of purposes: clip_char, hash_link, matches_url, debug, find_collection, where_obj, in_groups, and weighted_sort."},{"title":"18F UI style guide","url":"https://cityofaustin.github.io/atxopendata.rocks//styleguide/images/","tags":[],"body":"Images are used heavily throughout the site, but using them isn’t always straightforward. Below is some guidance on how we use images of various formats throughout the site. Image formats The primary image formats that work well for the web are SVG, JPG, PNG, and GIF. Choosing the correct format can speed up the site and lead to a better user experience. Here are some guidlines that we use when picking images on 18f.gsa.gov: SVG: the fastest loading images. They are generally best suited for iconography, or less complex graphics. They can be added as a Jekyll include, or as an img tag with a source reference. SVGs added as Jekyll includes are rendered as valid html svg elements and can be styled using CSS. JPG: best for photos and more realistic images. PNG: best for text-heavy images, line art, or images with fewer colors. GIF: should only be used for simple animations. JPG, PNG, and GIF can only be added as an img tag with a source reference. Using and optimizing JPG and PNG Before adding images to the site, make sure that they are optimized for the web. Images should be as small as possible without reducing image quality. Crop images to correct dimensions and size. Hero images can be large, but shouldn’t exceed 1040px, the max-width for the site. Export it in the proper format. A good rule of thumb is that JPG is good for photographs and more realistic images, while PNG is best for text-heavy images, line art, or images with fewer colors. Then it is time to compress your image. JPG: you may be able to do some initial compression within your image editor (e.g., Photoshop), establishing a good tradeoff between image quality and image size. For additonal compression, download ImageOptim to optimize the the image further. PNG: drop it into ImageOptim or ImageAlpha and reduce the color palette, establishing a good tradeoff between image quality and size. If the PNG has an alpha channel, turn it into a transparent PNG-8 instead. Follow these steps to add to the repository. Using SVGs SVG is file type as well as a valid HTML element. What this means is that SVGs can be referenced as an img element that represents the SVG graphic as a whole or as an svg element that can be styled using CSS, like a font. The prefered method for adding SVGs on 18f.gsa.gov is as a Jekyll include, as shown below. Follow these steps to use SVGs as regular images. Agile Cyclical arrows representing iterative design Code {% include svg/icons/agile-icon.svg %} Documentation To use an SVG as an include: Add the SVG to the /_includes/svg/ directory. In an include tag, reference the file path of the SVG relative to the _includes directory. Accessibility To follow accessibility guidelines, make sure that the SVG image file contains all the necessary markup to allow screenreader users to browse your site without difficulty. From the WCAG guidlines on creating accessibile SVGs: title: Provides a human-readable title for the element that contains it. The title element may be rendered by a graphical user agent as a tooltip. It may be rendered as speech by a speech synthesizer. desc: Provides a longer more complete description of an element that contains it. Authors should provide descriptions for complex or other content that has functional meaning. If the SVG is a presentation only image, meaning that it is assistive, but not necessary to provide context within the site, add the following attributes to the svg tag itself: role=\"img\" aria-hidden=\"true\" SVG include catalog This is a list of all of the SVGs that are available as includes (in the _includes directory). All icons are set to their default sizes. svg/icons/agile-icon.svg: Agile Cyclical arrows representing iterative design svg/icons/arrow-left.svg: Arrow left Arrow pointing to the left svg/icons/arrow-right.svg: Arrow right Arrow pointing to the right svg/icons/close.svg: Closing tab svg/icons/folderwithclock.svg: Folder with clock Representative of design systems svg/icons/gavel.svg: Gavel Showing our commitment to impliment laws and mandates svg/icons/monitor.svg: Monitor icon Improve public facing interfaces svg/icons/open-icon.svg: Open Representing our commitment to open source svg/icons/respect-icon.svg: Respect Hands shaking svg/icons/user-centered-icon.svg: User centered-design Demonstrating our commitment to our users Code **svg/icons/agile-icon.svg:** {% include svg/icons/agile-icon.svg %} **svg/icons/arrow-left.svg:** {% include svg/icons/arrow-left.svg %} **svg/icons/arrow-right.svg:** {% include svg/icons/arrow-right.svg %} **svg/icons/close.svg:** {% include svg/icons/close.svg %} **svg/icons/folderwithclock.svg:** {% include svg/icons/folderwithclock.svg %} **svg/icons/gavel.svg:** {% include svg/icons/gavel.svg %} **svg/icons/monitor.svg:** {% include svg/icons/monitor.svg %} **svg/icons/open-icon.svg:** {% include svg/icons/open-icon.svg %} **svg/icons/respect-icon.svg:** {% include svg/icons/respect-icon.svg %} **svg/icons/user-centered-icon.svg:** {% include svg/icons/user-centered-icon.svg %} Documentation As mentioned above, the icons defined above are set to their default size. For some icons this is defined as by the width and height attributes on the SVG. For the smallest icons, it is set by the .icon class on the SVG itself. Adding images To add images to the site: Add the image to the assets directory. - Blog images go in the /assets/blog/ directory. The subdirectories are organized by topic, so place the image in the directory that pertains to blog post’s primary topic. For detailed information on adding images to the blog, see Blog. - All other images can go in the /assets/img/ directory. Reference the file path in an image tag, making sure to prefix the path with {{ site.baseurl }} and adding alt text for accessibility purposes. Example of successful image reference with alt text Example of successful image reference with empty alt text Example of failed image with alt text Example of failed image without alt text Code #### Example of successful image reference with alt text #### Example of successful image reference with empty alt text #### Example of failed image with alt text #### Example of failed image without alt text Documentation The primary way to use both site and blog-specific images is to directly call the image path in an img tag. The https://cityofaustin.github.io/atxopendata.rocks/ insures that the path is relative to the root of the directory. Ensure that each image has alt text for improved site accessibility. If the image is presentational only, empty alt text can be added, like so: alt=\"\". Image lists This pattern associates text with an icon to break up text blocks improve user understanding. Respect Hands shaking Respect for government workers Civil servants have tremendous knowledge about what it takes to achieve their agency’s mission. We help clear technical and governmental hurdles to better serve the public. User centered-design Demonstrating our commitment to our users Human-centered design We listen to real users to understand their needs and build things that will be useful to them — without sacrificing technical or regulatory requirements. Code {% include svg/icons/respect-icon.svg %} Respect for government workers Civil servants have tremendous knowledge about what it takes to achieve their agency’s mission. We help clear technical and governmental hurdles to better serve the public. {% include svg/icons/user-centered-icon.svg %} Human-centered design We listen to real users to understand their needs and build things that will be useful to them — without sacrificing technical or regulatory requirements. Documentation This component is not available as a Jekyll include. To use it, copy the code snippet above and update the icon, title, and body text accordingly. Additional resources: SCSS references"},{"title":"18F UI style guide","url":"https://cityofaustin.github.io/atxopendata.rocks//styleguide/layouts/","tags":[],"body":"Templates These are the main page templates that exist on 18f.gsa.gov: Primary template The most common template on the site. Commonly used for content or guides. Learn more or View live example. Project page template The template for a specific project’s page. Learn more or View live example. Blog post template Template for an individual blog post. Learn more or View live example. Primary template Located at _layouts/primary.html, this is the template that is most frequently used in 18f.gsa.gov. It is responsible for creating content pages like /code-of-conduct/ to guides-style pages such as /join/. Example of primary template. Found at Join. Primary template front matter The primary template uses Jekyll front matter heavily to account for variations within the site. Below are the the potential front matter attributes that you can use. Some are listed as (optional). These can be used to alter the appearance of a page. Attribute Type What it does title String Title for the page visible in blue banner at the top of the page permalink String Path that the page renders relative to the site’s baseurl layout String Should be set to primary lead String (optional) Large white text that renders on the top blue banner banner_cta Boolean (optional) Set to false by default. Generates a light blue call to action banner when set to true. subnav_items Object (optional) Navigation items object that contains a list of subnavigation items that contain a permalink and text. Renders a sticky subnav on the left side of the page. subnav_title String (optional) Set if you want the subnav title or breadcumb text to differ from the page title. hero Boolean (optional) Enables a hero image in the banner. Defaults to true, so set to false to hide the image image String (optional) Path to hero image. This image will also display on blog post preview cards image_alt String (optional) Accessibility text for the image image_figcaption String (optional) A caption that will be displayed on top of the image breadcrumb Boolean (optional) Set to false by default. Specify true to enable the breadcrumb. If set to true, set subnav_title if the breadcrumb text differs from the page title. View breadcrumb component Project page template Located at _layouts/project-page.html, this is the template for creating new project pages as well as project cards that show up at /what-we-deliver/. Example of project page template. Found at FEC project page. Add a project page Create a new file within the _projects directory, named with the following format: [agency acronym]-[project-name].md. Copy the project page template to that file. Replace all relavent front matter fields. To see if a field is required, see the project page schema. If you are adding an image, make sure to check out the wiki. If you are not adding an image, make sure to specify an image_icon property in the front matter, and reference an SVG available in the SVG catalog like so: image_icon: gavel.svg Populate the sidebar for at a glance information. To do this, update the front matter related to the sidebar. If you don’t want something to show up in the sidebar, remove it from the front matter. Blog post template Located at _layouts/post.html, this is the template for creating new blog posts. Example of a blog post template. Found at NASA's journey with the U.S. Web Design Standards. There is extensive documentation for how to publish a blog post on the wiki and an example blog post to assist with adding metadata and frequently used blog components. A deeper dive into those components is available at Blog. Grid The layout and grid structure inherits from the U.S. Web Design Standards and makes some slight adjustments. Layout changes are not overrides of the standards, but a handful of CSS classes have been added to compliment the Standards. Class name What it does usa-width-tablet A class that allows certain content, namely the project cards, and the blog previews to respond at a different breakpoint, $tablet-screen (768px). usa-flex Wrapper class that sets display: flex, and can be used to create more flexible layouts. Classes used with usa-flex usa-flex-baseline, usa-flex-end, usa-flex-pull-right, usa-flex-always, usa-flex-wrap, usa-flex-vertically-top, usa-flex-pull-right, and usa-flex-vertically-bottom. usa-grid-reversed This class can be used to alternate the order that content appears in mobile vs desktop screen widths. content-wide In the Standards, the primary way to improve readability is via the usa-content class, which limits content to 75 characters. Instead of relying on this mechanism, the site wraps site content with the content-focus class, limiting the entire grid to roughly 100 characters. content-focus When the the grid needs to be wider, content-wide is used and the content width is controlled by using partial grid layouts. Sidebar This attribute is found in the contact and project pages on the 18F site. This feature provides at-a-glance information. Section header Supporting subheader List of helpful reference links link to agency 1: agency1.gov link to more info: More info Twitter: @agency GitHub: link to repo Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Code Section header Supporting subheader List of helpful reference links link to agency 1: agency1.gov link to more info: More info Twitter: @agency GitHub: link to repo Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Documentation The sidebar should be placed first in the HTML before the main content on the left. In the tag we use the usa-grid-reversed-right class. This class reverses the order in which the HTML is displayed so that the content that would normally appear on the left will appear on the right instead. The order is not reversed in mobile."},{"title":"18F UI style guide","url":"https://cityofaustin.github.io/atxopendata.rocks//styleguide/typography/","tags":[],"body":"Font family $font-sans: Helvetica Neue (Helvetica, Arial, sans serif) $color-base: #000000 1rem = 10px Helvetica Neue, Regular Aa A B C D E F G H I J K L M N O P Q R S T U V W Z Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9 Helvetica Neue, Bold Aa A B C D E F G H I J K L M N O P Q R S T U V W Z Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9 Documentation We are overriding the font used by the U.S. Web Design Standards with the font used by the 18F Brand. Additional resources: USWDS references SCSS references Typesetting h1 – 3.8rem, 38px h2 – 3.4rem, 34px h3 – 2.3rem, 23px h4 – 2.1rem, 21px h5 – 1.4rem, 14px p – 1.8rem, 18px Code h1 – 3.8rem, 38px h2 – 3.4rem, 34px h3 – 2.3rem, 23px h4 – 2.1rem, 21px h5 – 1.4rem, 14px p – 1.8rem, 18px Documentation To use headers, either use the semantic element, or reference it with a dot-delimited class. For example: would render the same as . For size reference: Element Font size (rem) Font size (px) h1 3.8rem 38px h2 3.4rem 34px h3 2.3rem 23px h4 2.1rem 21px h5 1.4rem 14px p 1.8rem 18px Additional resources: USWDS references SCSS references Font weights There are only two font weights used on 18f.gsa.gov. Bold Normal Code Bold Normal Documentation Font weight is directly inherited from the U.S. Web Design Standards. Quick usage reference: SCSS variable CSS class Font weight $font-bold p-bold 700 $font-normal p-normal (only needs to be used to be used to override another class) 400 Additional resources: USWDS references Links Link Visited Link Arrow right Arrow pointing to the right Arrow left Arrow pointing to the left Back Visited Arrow right Arrow pointing to the right Code Link Visited Link {% include svg/icons/arrow-right.svg %} {% include svg/icons/arrow-left.svg %} Back Visited {% include svg/icons/arrow-right.svg %} Documentation To use a link, specify the text, direction that the arrow is pointing, and reference the SVG file for the corresponding arrow."},{"title":"","url":"https://cityofaustin.github.io/atxopendata.rocks//styleguide/subpages/layout.html","tags":[],"body":"18F UI style guideTemplates These are the main page templates that exist on 18f.gsa.gov: Primary template The most common template on the site. Commonly used for content or guides. Learn more or View live example. Project page template The template for a specific project’s page. Learn more or View live example. * Blog post template Template for an individual blog post. Learn more or View live example. Primary template Located at _layouts/primary.html, this is the template that is most frequently used in 18f.gsa.gov. It is responsible for creating content pages like /code-of-conduct/ to guides-style pages such as /join/. Example of primary template. Found at Join. Primary template front matter The primary template uses Jekyll front matter heavily to account for variations within the site. Below are the the potential front matter attributes that you can use. Some are listed as (optional). These can be used to alter the appearance of a page. Attribute Type What it does title String Title for the page visible in blue banner at the top of the page permalink String Path that the page renders relative to the site’s baseurl layout String Should be set to primary lead String (optional) Large white text that renders on the top blue banner banner_cta Boolean (optional) Set to false by default. Generates a light blue call to action banner when set to true. subnav_items Object (optional) Navigation items object that contains a list of subnavigation items that contain a permalink and text. Renders a sticky subnav on the left side of the page. subnav_title String (optional) Set if you want the subnav title or breadcumb text to differ from the page title. hero Boolean (optional) Enables a hero image in the banner. Defaults to true, so set to false to hide the image image String (optional) Path to hero image. This image will also display on blog post preview cards image_alt String (optional) Accessibility text for the image image_figcaption String (optional) A caption that will be displayed on top of the image breadcrumb Boolean (optional) Set to false by default. Specify true to enable the breadcrumb. If set to true, set subnav_title if the breadcrumb text differs from the page title. View breadcrumb component Project page template Located at _layouts/project-page.html, this is the template for creating new project pages as well as project cards that show up at /what-we-deliver/. Example of project page template. Found at FEC project page. Add a project page Create a new file within the _projects directory, named with the following format: [agency acronym]-[project-name].md. Copy the project page template to that file. Replace all relavent front matter fields. To see if a field is required, see the project page schema. If you are adding an image, make sure to check out the wiki. If you are not adding an image, make sure to specify an image_icon property in the front matter, and reference an SVG available in the SVG catalog like so: image_icon: gavel.svg Populate the sidebar for at a glance information. To do this, update the front matter related to the sidebar. If you don’t want something to show up in the sidebar, remove it from the front matter. Blog post template Located at _layouts/post.html, this is the template for creating new blog posts. Example of a blog post template. Found at NASA's journey with the U.S. Web Design Standards. There is extensive documentation for how to publish a blog post on the wiki and an example blog post to assist with adding metadata and frequently used blog components. A deeper dive into those components is available at Blog. Grid The layout and grid structure inherits from the U.S. Web Design Standards and makes some slight adjustments. Layout changes are not overrides of the standards, but a handful of CSS classes have been added to compliment the Standards. Class name What it does usa-width-tablet A class that allows certain content, namely the project cards, and the blog previews to respond at a different breakpoint, $tablet-screen (768px). usa-flex Wrapper class that sets display: flex, and can be used to create more flexible layouts. Classes used with usa-flex usa-flex-baseline, usa-flex-end, usa-flex-pull-right, usa-flex-always, usa-flex-wrap, usa-flex-vertically-top, usa-flex-pull-right, and usa-flex-vertically-bottom. usa-grid-reversed This class can be used to alternate the order that content appears in mobile vs desktop screen widths. content-wide In the Standards, the primary way to improve readability is via the usa-content class, which limits content to 75 characters. Instead of relying on this mechanism, the site wraps site content with the content-focus class, limiting the entire grid to roughly 100 characters. content-focus When the the grid needs to be wider, content-wide is used and the content width is controlled by using partial grid layouts."}]}